server {
     
       listen             80;
       server_name        localhost;
       return             301 https://$server_name$request_uri;
}



server  {
        
        listen       443;
        ssl on;

        server_name  localhost;

    
     
  

 
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';



	# Add headers to serve security related headers
 	add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
 	add_header X-Content-Type-Options nosniff;
 	add_header X-Frame-Options "SAMEORIGIN";
 	add_header X-XSS-Protection "1; mode=block";
 	add_header X-Robots-Tag none;


 
	 # Path to the root of your installation
 	 root /usr/share/webapps/owncloud;
	 # set max upload size
 	 client_max_body_size 10G;
 	 fastcgi_buffers 64 4K;

         # Disable gzip to avoid the removal of the ETag header
 	 gzip off;
	
	 # Uncomment if your server is build with the ngx_pagespeed module
 	 # This module is currently not supported.
 	 #pagespeed off;        

	 index index.php;
 	 error_page 403 /core/templates/403.php;
 	 error_page 404 /core/templates/404.php;


         rewrite ^/.well-known/carddav /remote.php/carddav/ permanent;
	 rewrite ^/.well-known/caldav /remote.php/caldav/ permanent;

	 location ~ /.well-known {
                allow all;
        }

         location = /robots.txt {
		 allow all;
 		 log_not_found off;
 		 access_log off;
 	}

	location ~ ^/(build|tests|config|lib|3rdparty|templates|data)/ {
 		  deny all;
	}
	
	location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
  		deny all;
	}





        location / {
 	    rewrite ^/remote/(.*) /remote.php last;
  	    rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;
  	    try_files $uri $uri/ =404;
	}

        location ~ \.php(?:$|/)  {
	    fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass   unix:/run/php-fpm/php-fpm.sock;
            fastcgi_index  index.php;
	    fastcgi_param PATH_INFO $fastcgi_path_info;
  	    fastcgi_param HTTPS on;	    
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
	    fastcgi_param modHeadersAvailable true;
	    fastcgi_intercept_errors on;
            include        fastcgi_params;
        }

      
 	 # Adding the cache control header for js and css files
 	 # Make sure it is BELOW the location ~ \.php(?:$|/) { block
 	 location ~* \.(?:css|js)$ {
	 add_header Cache-Control "public, max-age=7200";
	 # Add headers to serve security related headers
	 add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
 	 add_header X-Content-Type-Options nosniff;
       	 add_header X-Frame-Options "SAMEORIGIN";
	 add_header X-XSS-Protection "1; mode=block";
 	 add_header X-Robots-Tag none;
 	 # Optional: Don't log access to assets
   	 access_log off;
 	}

 	# Optional: Don't log access to other assets
 	location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|swf)$ {
   	access_log off;
 	}
   }



